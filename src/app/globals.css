@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-timeline: --page-scroll block;
}

/* Define your color scheme for light mode */
@media (prefers-color-scheme: light) {
  :root {
    --foreground-color: #1a202c; /* Foreground color for light mode (bg-gray-800 in Tailwind) */
    --background-color: #b9c3ca; /* Background color for light mode (bg-gray-100 in Tailwind) */
  }
}

/* Define your color scheme for dark mode */
@media (prefers-color-scheme: dark) {
  :root {
    --foreground-color: #f7fafc; /* Foreground color for dark mode (bg-gray-100 in Tailwind) */
    --background-color: #0d1117; /* Background color for dark mode (bg-gray-800 in Tailwind) */
  }
}

* {
  --black: #222222;
  --white: #EBEBEB;
  --gray: #adadad;
  --blue: #1000bb;
}
main {
  height: 200vh;
 
}

footer {
  animation: show-footer 2s linear;
  animation-timeline: view();
  animation-range: entry;
  /* position: relative; */
  width: 100%;
  bottom: 0;
  height: 5%;
}

@supports (animation-timeline: view()) {
  .come-in {
    animation: animate-in ease-out forwards, animate-out ease-in forwards;
    animation-timeline: view();
    animation-range: entry, exit;
  }

  #progress {
    position: fixed;
    width: 100%;
    height: 1px;
    bottom: 10%;
    transform-origin: 50% 0;
    animation: grow-progress linear;
    animation-timeline: --page-scroll;
  }
}

@keyframes animate-in {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }
  80% {
    opacity: 0.8;
    transform: translateY(20%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes animate-out {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  20% {
    opacity: 0.8;
    transform: translateY(-60%);
  }
  100% {
    opacity: 0;
    transform: translateY(-100%);
  }
}

@keyframes grow-progress {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes show-footer {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}



body {
  --black: #000000;
  --ash-black: #222;
  --sky: #00ccff;
  --green: #22dddd;
  --blue: #1300ff;
  --purple: rgb(147, 51, 234);
  --pink: #ff0066;
  --red: #fe0222;
  --orange: #fd7702;
  --yellow: #ffbb00;

  --accent: var(--purple);

}


* {
  font-family: sofia-pro, sans-serif;
  font-weight: 400;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
}




.animate-in {
  animation: animateIn 0.3s ease 0.15s both;
}

@keyframes animateIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }

}
.privacy-screen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--blue);
  z-index: 200;
}
.sk-cube-grid {
  width: 40px;
  height: 40px;
  margin: 100px auto;
}



.sk-cube-grid .sk-cube {
  width: 33%;
  height: 33%;
  background-color: var(--purple);
  float: left;
  -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
          animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out; 
}


.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
          animation-delay: 0.4s; }
.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
          animation-delay: 0s; }
.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }

@-webkit-keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1); 
  }
}

@keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
  } 
}

.try {
  transform: translateX(100%);
}